import re

def assess_password_strength(password):
    # Criteria for strength
    min_length = 8
    has_uppercase = re.search(r'[A-Z]', password)
    has_lowercase = re.search(r'[a-z]', password)
    has_number = re.search(r'\d', password)
    has_special = re.search(r'[!@#$%^&*(),.?":{}|<>]', password)

    length = len(password)

    # Evaluate strength
    strength = "Weak"
    if length >= min_length:
        if has_uppercase and has_lowercase and has_number and has_special:
            strength = "Very Strong"
        elif has_uppercase and has_lowercase and has_number:
            strength = "Strong"
        elif (has_uppercase or has_lowercase) and has_number:
            strength = "Moderate"
        elif has_number:
            strength = "Weak"
    
    # Generate feedback
    feedback = []
    if length < min_length:
        feedback.append(f"Password should be at least {min_length} characters long.")
    if not has_uppercase:
        feedback.append("Password should include at least one uppercase letter.")
    if not has_lowercase:
        feedback.append("Password should include at least one lowercase letter.")
    if not has_number:
        feedback.append("Password should include at least one number.")
    if not has_special:
        feedback.append("Password should include at least one special character.")

    return strength, feedback

def main():
    password = input("Enter your password: ")
    strength, feedback = assess_password_strength(password)
    print(f"Password Strength: {strength}")
    if feedback:
        print("Feedback:")
        for line in feedback:
            print(f" - {line}")

if __name__ == '__main__':
    main()
